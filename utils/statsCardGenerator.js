const { createCanvas, loadImage, registerFont } = require('canvas');
const path = require('path');

// A simple function to wrap text
function wrapText(context, text, x, y, maxWidth, lineHeight) {
    const words = text.split(' ');
    let line = '';
    for (let n = 0; n < words.length; n++) {
        const testLine = line + words[n] + ' ';
        const metrics = context.measureText(testLine);
        const testWidth = metrics.width;
        if (testWidth > maxWidth && n > 0) {
            context.fillText(line, x, y);
            line = words[n] + ' ';
            y += lineHeight;
        } else {
            line = testLine;
        }
    }
    context.fillText(line, x, y);
}

async function generateStatsCard(statsData) {
    const width = 800;
    const height = 450; // Increased height for better spacing
    const canvas = createCanvas(width, height);
    const ctx = canvas.getContext('2d');

    // --- Background ---
    ctx.fillStyle = '#2C2F33'; // A slightly lighter dark color
    ctx.fillRect(0, 0, width, height);

    // --- Header Title ---
    ctx.fillStyle = '#FFFFFF';
    ctx.font = 'bold 32px sans-serif';
    ctx.textAlign = 'center';
    ctx.fillText(`إحصائيات ${statsData.user.displayName}`, width / 2, 60);

    // --- User Avatar ---
    try {
        const avatar = await loadImage(statsData.user.avatarUrl);
        ctx.save();
        ctx.beginPath();
        ctx.arc(120, 150, 60, 0, Math.PI * 2, true);
        ctx.closePath();
        ctx.clip();
        ctx.drawImage(avatar, 60, 90, 120, 120);
        ctx.restore();
    } catch (e) {
        console.error("Failed to load user avatar:", e.message);
        ctx.beginPath();
        ctx.arc(120, 150, 60, 0, Math.PI * 2, true);
        ctx.fillStyle = '#7289DA';
        ctx.fill();
    }

    // --- Main Stats ---
    ctx.textAlign = 'left';
    ctx.fillStyle = '#FFFFFF';
    ctx.font = 'bold 36px sans-serif';
    ctx.fillText(`${statsData.totalPoints}`, 250, 140);
    ctx.font = '24px sans-serif';
    ctx.fillStyle = '#B9BBBE';
    ctx.fillText('نقطة', 320, 140);

    ctx.fillStyle = '#FFFFFF';
    ctx.font = 'bold 36px sans-serif';
    ctx.fillText(`#${statsData.rank}`, 250, 190);
    ctx.font = '24px sans-serif';
    ctx.fillStyle = '#B9BBBE';
    ctx.fillText('الترتيب العام', 320, 190);


    // --- Divider ---
    ctx.strokeStyle = '#4F545C';
    ctx.lineWidth = 1;
    ctx.beginPath();
    ctx.moveTo(40, 250);
    ctx.lineTo(width - 40, 250);
    ctx.stroke();

    // --- Top Responsibilities ---
    ctx.fillStyle = '#FFFFFF';
    ctx.font = 'bold 22px sans-serif';
    ctx.fillText('أفضل المسؤوليات أداءً:', 40, 290);

    ctx.font = '20px sans-serif';
    ctx.fillStyle = '#B9BBBE';
    if (statsData.topResponsibilities.length > 0) {
        statsData.topResponsibilities.slice(0, 3).forEach((resp, index) => {
            const y = 330 + (index * 35);
            ctx.textAlign = 'left';
            ctx.fillText(`${index + 1}. ${resp.name}`, 60, y);
            ctx.textAlign = 'right';
            ctx.fillText(`${resp.points} نقطة`, width - 60, y);
        });
    } else {
        ctx.textAlign = 'center';
        ctx.fillText('لا توجد نقاط مسجلة', width / 2, 340);
    }


    // --- Footer ---
    ctx.font = '14px sans-serif';
    ctx.fillStyle = '#7289DA';
    ctx.textAlign = 'center';
    ctx.fillText(`Generated by ${statsData.botName} Bot`, width / 2, height - 20);

    return canvas.toBuffer('image/png');
}

module.exports = { generateStatsCard };
